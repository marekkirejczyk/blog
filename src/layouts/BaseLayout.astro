---
export interface Props {
  title?: string;
  description?: string;
  ogImage?: string;
  ogType?: string;
}

const { 
  title = 'zkMarek', 
  description = 'zkMarek\'s blog',
  ogImage,
  ogType = 'website'
} = Astro.props;
const fullTitle = title === 'zkMarek' ? title : `${title} | zkMarek`;
const canonicalUrl = new URL(Astro.url.pathname, Astro.site || 'http://localhost:4321');
const imageUrl = ogImage ? new URL(ogImage, Astro.site || 'http://localhost:4321').toString() : undefined;
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{fullTitle}</title>
  <meta name="description" content={description}>
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  
  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={ogType}>
  <meta property="og:url" content={canonicalUrl}>
  <meta property="og:title" content={fullTitle}>
  <meta property="og:description" content={description}>
  {imageUrl && <meta property="og:image" content={imageUrl}>}
  
  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:url" content={canonicalUrl}>
  <meta property="twitter:title" content={fullTitle}>
  <meta property="twitter:description" content={description}>
  {imageUrl && <meta property="twitter:image" content={imageUrl}>}
</head>
<body>
  <header class="header">
    <div class="container">
      <a href="/" class="logo">zkMarek</a>
    </div>
  </header>
  
  <main class="main">
    <slot />
  </main>
  
  <footer class="footer">
    <div class="container">
      <div class="footer-links">
        <a href="https://x.com/zkmarek" target="_blank" rel="noopener noreferrer">X (Twitter)</a>
        <span class="separator">•</span>
        <a href="https://www.linkedin.com/in/kirejczyk/" target="_blank" rel="noopener noreferrer">LinkedIn</a>
      </div>
      <p class="footer-copy">© {new Date().getFullYear()} zkMarek</p>
    </div>
  </footer>
</body>
</html>

<style is:global>
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  body {
    background-color: #ffffff;
    color: #000000;
    line-height: 1.6;
    font-size: 18px;
  }

  a {
    color: #0066cc;
    text-decoration: none;
  }

  a:hover {
    text-decoration: underline;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 24px;
  }

  /* Header */
  .header {
    border-bottom: 1px solid #f0f0f0;
    padding: 24px 0;
    position: sticky;
    top: 0;
    background: white;
    z-index: 100;
  }

  .logo {
    font-size: 24px;
    font-weight: 600;
    color: #000000;
    text-decoration: none;
  }

  .logo:hover {
    text-decoration: none;
    opacity: 0.8;
  }

  /* Main */
  .main {
    min-height: calc(100vh - 200px);
    padding: 48px 0;
  }

  /* Footer */
  .footer {
    border-top: 1px solid #f0f0f0;
    padding: 48px 0;
    margin-top: 96px;
    text-align: center;
  }

  .footer-links {
    margin-bottom: 16px;
    font-size: 16px;
  }

  .footer-links a {
    color: #666666;
  }

  .footer-links .separator {
    margin: 0 12px;
    color: #cccccc;
  }

  .footer-copy {
    color: #999999;
    font-size: 14px;
  }

  /* Responsive */
  @media (max-width: 768px) {
    body {
      font-size: 16px;
    }

    .container {
      padding: 0 16px;
    }

    .header {
      padding: 16px 0;
    }

    .logo {
      font-size: 20px;
    }

    .main {
      padding: 32px 0;
    }

    .footer {
      padding: 32px 0;
      margin-top: 64px;
    }
  }
</style>

